/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var C=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var T=Object.getOwnPropertyNames;var S=Object.prototype.hasOwnProperty;var N=(i,s)=>{for(var t in s)C(i,t,{get:s[t],enumerable:!0})},y=(i,s,t,u)=>{if(s&&typeof s=="object"||typeof s=="function")for(let e of T(s))!S.call(i,e)&&e!==t&&C(i,e,{get:()=>s[e],enumerable:!(u=I(s,e))||u.enumerable});return i};var b=i=>y(C({},"__esModule",{value:!0}),i);var _={};N(_,{default:()=>h});module.exports=b(_);var a=require("obsidian");var D='<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16"><path fill="currentColor" d="M2.344 2.343a8 8 0 0 1 11.314 11.314A8.002 8.002 0 0 1 .234 10.089a8 8 0 0 1 2.11-7.746m1.06 10.253a6.5 6.5 0 1 0 9.108-9.275a6.5 6.5 0 0 0-9.108 9.275M6.03 4.97L8 6.94l1.97-1.97a.749.749 0 0 1 1.275.326a.75.75 0 0 1-.215.734L9.06 8l1.97 1.97a.749.749 0 0 1-.326 1.275a.75.75 0 0 1-.734-.215L8 9.06l-1.97 1.97a.749.749 0 0 1-1.275-.326a.75.75 0 0 1 .215-.734L6.94 8L4.97 6.03a.75.75 0 0 1 .018-1.042a.75.75 0 0 1 1.042-.018"/></svg>',E='<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16"><path fill="currentColor" d="M1 1.75C1 .784 1.784 0 2.75 0h7.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16H2.75A1.75 1.75 0 0 1 1 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h10.5a.25.25 0 0 0 .25-.25V4.664a.25.25 0 0 0-.073-.177l-2.914-2.914a.25.25 0 0 0-.177-.073ZM8 3.25a.75.75 0 0 1 .75.75v1.5h1.5a.75.75 0 0 1 0 1.5h-1.5v1.5a.75.75 0 0 1-1.5 0V7h-1.5a.75.75 0 0 1 0-1.5h1.5V4A.75.75 0 0 1 8 3.25m-3 8a.75.75 0 0 1 .75-.75h4.5a.75.75 0 0 1 0 1.5h-4.5a.75.75 0 0 1-.75-.75"/></svg>';var m='<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16"><path fill="currentColor" d="M2.75 14A1.75 1.75 0 0 1 1 12.25v-2.5a.75.75 0 0 1 1.5 0v2.5c0 .138.112.25.25.25h10.5a.25.25 0 0 0 .25-.25v-2.5a.75.75 0 0 1 1.5 0v2.5A1.75 1.75 0 0 1 13.25 14Z"/><path fill="currentColor" d="M7.25 7.689V2a.75.75 0 0 1 1.5 0v5.689l1.97-1.969a.749.749 0 1 1 1.06 1.06l-3.25 3.25a.75.75 0 0 1-1.06 0L4.22 6.78a.749.749 0 1 1 1.06-1.06z"/></svg>',w='<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16"><path fill="currentColor" d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8m1.5 0a6.5 6.5 0 1 0 13 0a6.5 6.5 0 0 0-13 0m10.28-1.72l-4.5 4.5a.75.75 0 0 1-1.06 0l-2-2a.75.75 0 0 1 .018-1.042a.75.75 0 0 1 1.042-.018l1.47 1.47l3.97-3.97a.75.75 0 0 1 1.042.018a.75.75 0 0 1 .018 1.042"/></svg>';var r=require("obsidian"),p={ignoreContractions:!0,ignoreMarkdownComments:!0,ignoreFrontmatter:!0,showInStatusBar:!0,wordsPerPage:300,marker:"",contAllContentIfNoMarker:!0,targetFolderPath:"/"},F=class extends r.PluginSettingTab{constructor(s,t){super(s,t),this.plugin=t}display(){let{containerEl:s}=this;s.empty(),s.createEl("h2",{text:"Word Count Settings"}),new r.Setting(s).setName("Words per page").setDesc("Set the number of words to consider as one page.").addText(t=>t.setValue(this.plugin.settings.wordsPerPage.toString()).setPlaceholder(p.wordsPerPage.toString()).onChange(async u=>{let e=parseInt(u);!isNaN(e)&&e>0?(this.plugin.settings.wordsPerPage=e,await this.plugin.saveSettings()):(console.warn("Invalid input for Words per page. Please enter a positive number."),t.setValue(this.plugin.settings.wordsPerPage.toString()))})),new r.Setting(s).setName("Ignore contractions").setDesc("Toggle to exclude common contractions (e.g., 's, 'd, 'll) from the word count.").addToggle(t=>t.setValue(this.plugin.settings.ignoreContractions).onChange(async u=>{this.plugin.settings.ignoreContractions=u,await this.plugin.saveSettings()})),new r.Setting(s).setName("Ignore markdown comments").setDesc("Toggle to exclude content between %% lines from the count.").addToggle(t=>t.setValue(this.plugin.settings.ignoreMarkdownComments).onChange(async u=>{this.plugin.settings.ignoreMarkdownComments=u,await this.plugin.saveSettings()})),new r.Setting(s).setName("Ignore frontmatter").setDesc("Toggle to exclude the properties section (between --- lines at the top) from the count.").addToggle(t=>t.setValue(this.plugin.settings.ignoreFrontmatter).onChange(async u=>{this.plugin.settings.ignoreFrontmatter=u,await this.plugin.saveSettings()})),new r.Setting(s).setName("Marker").setDesc("Enter the string that marks the beginning of the content for word count.").addText(t=>t.setPlaceholder("Enter your marker").setValue(this.plugin.settings.marker).onChange(async u=>{this.plugin.settings.marker=u,await this.plugin.saveSettings()})),new r.Setting(s).setName("Count all if there is no marker").setDesc("Toggle to count the entire note if marker is set but not found.").addToggle(t=>t.setValue(this.plugin.settings.contAllContentIfNoMarker).onChange(async u=>{this.plugin.settings.contAllContentIfNoMarker=u,await this.plugin.saveSettings()})),new r.Setting(s).setName("Show in status bar").setDesc("Toggle to show or hide the word count in the status bar.").addToggle(t=>t.setValue(this.plugin.settings.showInStatusBar).onChange(async u=>{this.plugin.settings.showInStatusBar=u,await this.plugin.saveSettings()})),new r.Setting(s).setName("Folder for registering last note opened.").setDesc('Enter the folder path from which you want to track the last note opened. Use "\\" for all.').addText(t=>t.setPlaceholder("\\").setValue(this.plugin.settings.targetFolderPath).onChange(async u=>{this.plugin.settings.targetFolderPath=u,await this.plugin.saveSettings()}))}};var l="git-actions-view",P="obsidian-git:pull",L="obsidian-git:push",x="obsidian-git:list-changed-files",k="obsidian-git:backup-and-close";function f(i,s){let t=i.path.replace(/\\/g,"/"),u=s.replace(/\\/g,"/"),e=u==="/"?"/":u+"/";return t.startsWith(e)}function O(i,s){let t=i;s&&(t=i.replace(/'(s|d|ll|ve|re|m)\b/gi,""));let u=/'â€™A-Za-z\u00AA\u00B5\u00BA\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F-\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC/.source,e=/\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u4E00-\u9FD5/.source,n=/[\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u4E00-\u9FD5]{1}/.source,o=new RegExp([`(?:[0-9]+(?:(?:,|\\.)[0-9]+)*|[\\-${u}])+`,e,n].join("|"),"g");return(t.match(o)||[]).length}function M(i){return i.length}var A=class extends a.ItemView{constructor(s,t){super(s),this.plugin=t}getViewType(){return l}getDisplayText(){return"Custom View"}async onOpen(){let s=this.containerEl.children[1];s.empty(),s.addClass("git-actions-view-container");let t=s.createDiv({cls:"git-action-icon-button-group"}),u=t.createEl("div",{cls:"clickable-icon git-action-icon-button mod-warning"});u.innerHTML=D,u.setAttribute("aria-label","Backup, Sync and Close App"),this.registerDomEvent(u,"click",()=>{this.plugin.executeGitCommand(k,"Attempting to commit, sync, and close Obsidian...","Error executing Git Backup/Sync/Close.")});let e=t.createEl("div",{cls:"clickable-icon git-action-icon-button"});e.innerHTML=w,e.setAttribute("aria-label","Git Commit and Sync"),this.registerDomEvent(e,"click",()=>{this.plugin.executeGitCommand(L,"Attempting Git Commit and Sync...","Error executing Git Commit and Sync.")});let n=t.createEl("div",{cls:"clickable-icon git-action-icon-button"});n.innerHTML=m,n.setAttribute("aria-label","Git Pull"),this.registerDomEvent(n,"click",()=>{this.plugin.executeGitCommand(P,"Attempting Git Pull...","Error executing Git Pull.")});let o=t.createEl("div",{cls:"clickable-icon git-action-icon-button"});o.innerHTML=E,o.setAttribute("aria-label","List Changed Files"),this.registerDomEvent(o,"click",()=>{this.plugin.executeGitCommand(x,"Attempting to list Git changes...","Error listing Git changes.")}),this.wordCountDisplayEl=s.createEl("div",{cls:"word-count-display"});let c=s.createEl("button",{text:"Open Lastest Chapter",cls:"mod-cta"});this.registerDomEvent(c,"click",()=>{this.plugin.openLastNoteFromTargetFolder()}),this.plugin.updateStats(),this.updateLastNoteDisplay(this.plugin.lastOpenedNoteInTargetFolder)}async onClose(){}updateWordCountDisplay(s){this.wordCountDisplayEl&&(this.wordCountDisplayEl.innerHTML=s)}updateLastNoteDisplay(s){this.lastNoteDisplayEl&&(s?this.lastNoteDisplayEl.textContent=`Last note in folder: ${s}`:this.lastNoteDisplayEl.textContent="No note opened yet in the target folder.")}},h=class extends a.Plugin{constructor(){super(...arguments);this.statusBarItemEl=null;this.lastOpenedNoteInTargetFolder=null}async onload(){console.log("Custom View plugin loaded"),await this.loadSettings(),this.addSettingTab(new F(this.app,this)),this.settings.showInStatusBar&&this.createStatusBarItem(),this.registerEvent(this.app.workspace.on("active-leaf-change",async u=>{this.updateStats();let e=this.app.workspace.getActiveFile();e instanceof a.TFile&&this.settings.targetFolderPath&&f(e,this.settings.targetFolderPath)&&(this.lastOpenedNoteInTargetFolder=e.path,this.app.workspace.getLeavesOfType(l).forEach(n=>{n.view instanceof A&&n.view.updateLastNoteDisplay(this.lastOpenedNoteInTargetFolder)}))})),this.registerEvent(this.app.workspace.on("editor-change",(0,a.debounce)(()=>this.updateStats(),500))),this.updateStats();let t=this.app.workspace.getActiveFile();t instanceof a.TFile&&this.settings.targetFolderPath&&f(t,this.settings.targetFolderPath)&&(this.lastOpenedNoteInTargetFolder=t.path),this.registerView(l,u=>new A(u,this)),this.addCommand({id:"open-custom-view",name:"Open Custom View",callback:()=>{this.activateView()}}),this.addRibbonIcon(this.getIcon(),"Open Custom View",()=>{this.activateView()})}getIcon(){return"star"}onunload(){this.statusBarItemEl&&(this.statusBarItemEl.remove(),this.statusBarItemEl=null),console.log("Custom View plugin unloaded")}async loadSettings(){this.settings=Object.assign({},p,await this.loadData())}async saveSettings(){await this.saveData(this.settings),this.settings.showInStatusBar&&!this.statusBarItemEl?this.createStatusBarItem():!this.settings.showInStatusBar&&this.statusBarItemEl&&this.removeStatusBarItem(),this.updateStats(),this.lastOpenedNoteInTargetFolder=null,this.app.workspace.getLeavesOfType(l).forEach(t=>{t.view instanceof A&&t.view.updateLastNoteDisplay(this.lastOpenedNoteInTargetFolder)})}createStatusBarItem(){this.statusBarItemEl=this.addStatusBarItem()}removeStatusBarItem(){this.statusBarItemEl&&(this.statusBarItemEl.remove(),this.statusBarItemEl=null)}async updateStats(){let t=this.app.workspace.getActiveFile();if(t instanceof a.TFile&&t.extension==="md"){let e=await this.app.vault.read(t);if(this.settings.ignoreFrontmatter&&e.startsWith("---")){let g=e.indexOf("---",3);if(g!==-1){let B=e.indexOf(`
`,g);B!==-1?e=e.substring(B+1):e=""}}let n=this.settings.marker;if(n&&n.length>0){let g=e.indexOf(n);g!==-1?e=e.substring(g+n.length):this.settings.contAllContentIfNoMarker||(e="")}this.settings.ignoreMarkdownComments&&(e=e.replace(/%%[\s\S]*?%%/g,""));let o=M(e),c=O(e,this.settings.ignoreContractions),v=(c/this.settings.wordsPerPage).toFixed(2),d=`Chars: ${o}<br>Words: ${c}<br>Pages: ${v}`;this.statusBarItemEl&&(this.statusBarItemEl.innerHTML=d),this.app.workspace.getLeavesOfType(l).forEach(g=>{g.view instanceof A&&g.view.updateWordCountDisplay(d)})}else this.statusBarItemEl&&this.statusBarItemEl.setText(""),this.app.workspace.getLeavesOfType(l).forEach(u=>{u.view instanceof A&&u.view.updateWordCountDisplay("Chars: 0<br>Words: 0<br>Pages: 0.00")})}async activateView(){var n;let{workspace:t}=this.app,u=null,e=t.getLeavesOfType(l);e.length>0?u=e[0]:(u=(n=t.getRightLeaf(!1))!=null?n:t.getLeaf("split","vertical"),await u.setViewState({type:l,active:!0})),u&&t.revealLeaf(u)}async openLastNoteFromTargetFolder(){if(this.lastOpenedNoteInTargetFolder){let t=this.app.vault.getAbstractFileByPath(this.lastOpenedNoteInTargetFolder);t instanceof a.TFile?await this.app.workspace.getLeaf("split","vertical").openFile(t):(new a.Notice(`File not found: ${this.lastOpenedNoteInTargetFolder}`),this.lastOpenedNoteInTargetFolder=null,this.app.workspace.getLeavesOfType(l).forEach(u=>{u.view instanceof A&&u.view.updateLastNoteDisplay(this.lastOpenedNoteInTargetFolder)}))}else new a.Notice("No note from the target folder has been opened yet.")}async executeGitCommand(t,u,e){let n=this.app;try{if(new a.Notice(u),n.commands.commands[t])await n.commands.executeCommandById(t);else{let o=`Git Command ID "${t}" not found. Is the Obsidian Git plugin installed and enabled?`;console.error(o),new a.Notice(o)}}catch(o){console.error(`Error executing Git command "${t}":`,o),new a.Notice(e)}}};
